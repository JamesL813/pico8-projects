pico-8 cartridge // http://www.pico-8.com
version 32
__lua__
--microchip
--james

function _init()
	t=0
	score=0
	
	actors={}
	parts={}
	
	state="start"
	
	p=make_actor(1,32,64)
end

function _update60()
	if state=="start" then
		update_start()
	elseif state=="game" then
		update_game()
	elseif state=="end" then
		update_end()
	end
end

function _draw()
	if state=="start" then
		draw_start()
	elseif state=="game" then
		draw_game()
	elseif state=="end" then
		draw_end()
	end
end

--states
function update_start()
	if btn(❎) then
		state="game"
	end
end

function update_game()
	t+=1

	init_part(1)	

	if rnd(100)<90 then 
		init_part(0)
	end
	
	r=200-t*.05
	
	if r < 20 then
		r=20
	end
	
	if rnd(r)<1 then
		make_vir()
	end
	
	for a in all(actors) do
		update_actor(a)
	
		a2=collide(a)
	
		if a2!=nil then
			if a.k==1 and a2.k==3 then
				a.dead=true
				state="end"
			end
			if a.k==3 and a2.k==2 then
				a.dead=true
				a2.dead=true
				score+=1
			end
		end
	end
end

function update_end()
	if btnp(❎) then
		state="start"
		_init()
	end
end

function draw_start()
	cls(8)
	print("press ❎ to start!",32,32)
end

function draw_game()
	cls(2)
	map(0,0)
	rectfill(0,0,127,8,8)
	rectfill(0,120,127,127,8)

	local r = rnd(10)
	
	for p in all(parts) do
		update_part(p)
		circfill(p.x,p.y,p.r,p.col)
	end
	
	for a in all(actors) do
		spr(a.s,a.x,a.y)
		spr(18,p.x-8,p.y)
	end
	
	if t<80 then
		init_part(2)
		rectfill(0,56,80-t,80,13)
		rectfill(0,75,80-t,80,1)
	end
	
	print("score: "..score,0,0,7)
end

function draw_end()
	cls(2)
	print("game over",48,16)
	
	print("score: "..score,48,32)
	
	print("press ❎ to try again!"
		,24,48)

end



-->8
--actors
--k: type of actor
--		1-player
--		2-bullet
--  3-virus
function make_actor(k,x,y)
	add(test,3)

	local s=0
	local dx=0
	
	--player
	if k==1 then
	 s=1
	end
	
	--bullet
	if k==2 then
		s=16
		dx=4
	end
	
	if k==3 then
		s=4
	end
	
	a={
		s=s,
		k=k,
		x=x,
		y=y,
		dx=dx,
		dy=0,
		timer=0,
		dead=false
		}
	
	add(actors, a)
	return a
end

function update_actor(a)
	--if actor is player
	if a.k==1 then
		movement(a)
		if a.x+a.dx>=0 
		or a.x+a.dx<128 then 
			a.x+=a.dx
		end
		if a.y+a.dy>=0 
		or a.y+a.dy<128 then 
			a.y+=a.dy
		end
	else
			a.x+=a.dx
			a.y+=a.dy
	end
	
	a.timer+=1
	
	
	--if actor is virus
	if a.k==3 then
		a.dx=-.2
		a.dy=sin(p.timer/12)
		
		if a.y>118 then
			a.dy=-1
		elseif a.y<8 then
			a.dy=1
		end
		
--move towards player-----------
		if rnd(10)<2 then
			if a.y<p.y then
				a.dy=0.5
			else
				a.dy=-0.5
			end
		end
		
		if rnd(10)<2 then
			if a.x<p.x then
				a.dx=1
			end
		end
	end
--------------------------------
	if a.k==2 and a.timer==40 then
		a.dead=true
	end
	
	if a.dead==true then
		del(actors,a)
	end
end
--------------------------------


--virus-------------------------
function make_vir()
	make_actor(3,128,rnd(128))
end
--------------------------------


--bullets-----------------------
function make_bull()
	make_actor(2,p.x,p.y)
end
--------------------------------



-->8
--particles
--particles---------------------
function init_part(k)
	
	local typ=k
	local x=0
	local y=0
	local dx=-1
	local dy=0
	local r=2
	local col=8
	
	--blood cells
	if typ==0 then
		x=128
		y=rnd(128)
		r=rnd(2)
	end
	
	--smoke
	if typ==1 then
		x=p.x-8
		y=p.y+4
		dx=-2
		dy=-.2+(rnd(4)*.1)
		col=6
	end
	
	--vax
	if typ==2 then
		x=80-t
		y=56+rnd(24)
		dx=2
		r=rnd(2)
		col=12
		
	end
	
	part={k=typ,
		x=x,
		y=y,
		dx=dx,
		dy=dy,
		r=r,
		col=col,
		a=50 + rnd(100),--amplitude
		ps=rnd(10), --phase shift
		t=0,
		dead=false}

	add(parts,part)
end

function update_part(p)
	p.t+=.5
	--blood cell
	if p.k==0 or p.k==2 then
		p.dy=cos(p.ps+
									(p.t/p.a))
	end
	
	--smoke particle
	if p.k==1 then
		p.r+=(.1)
		if p.t==60 then
			p.dead=true
		end
	end
	
	p.x+=p.dx
	p.y+=p.dy
	
	if p.x<0 then
		p.dead=true
	end
	
	if p.dead==true then
		del(parts,p)
	end
	
end
--------------------------------

-->8
--player

function movement(p)
	if btn(⬆️) then
		p.dy=-1
		p.s=2
		if p.y<8 then
			p.dy=0
		end
	end
	
	if btn(⬇️) then
		p.dy=1
		p.s=3
		if p.y>114 then
			p.dy=0
		end
	end
	
	if btn(⬅️) then
		p.dx=-1.5
		if p.x<=0 then
			p.dx=0
		end
	end
	
	if btn(➡️) then
		p.dx=1
		if p.x>=128 then
			p.dx=0
		end
	end
	
	if not btn(⬅️) and 
		not btn(➡️) then
	 p.dx=-.5
	 if p.x<=0 then
			p.dx=0
		end
	end
	
	
	if not btn(⬆️) and 
		not btn(⬇️) then
	 p.dy=0
	 p.s=1
	end
	
	if btnp(❎) then
		make_bull()
		sfx(0)
	end
	
end
-->8
--collisions
function collide(a1)
	for a2 in all(actors) do
		if a2 != a1 then
			d=sqrt(((a1.x+4)-(a2.x+4))^2
				+((a1.y+4)-(a2.y+4))^2)
			
			if d<4 then
				return a2
			end
		end
	end
	
	return nil
end
__gfx__
00000000000000000000000000000000008080002222222222828222222222222222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000008686002222222222868622222222222222222200000000000000000000000000000000000000000000000000000000
00700700066000000666000006661000066666882222222226666688222222222222222200000000000000000000000000000000000000000000000000000000
00077000661116006666666066666160066666602222222226666662222222222228222200000000000000000000000000000000000000000000000000000000
00077000566666665555555566111666886686882222222288668688222222222222222200000000000000000000000000000000000000000000000000000000
00700700055550000555550066666000066666602222222226666662222222222222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000008668002222222222866822222222222222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000008008002222222222822822222222222222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000006222222222222222222222222282822200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000006622222222222222222222222286862200000000000000000000000000000000000000000000000000000000
0000ccc0000000000000000006600000000000006662222226661222222222222666668800000000000000000000000000000000000000000000000000000000
0000c7c066666666666889a76611160000000000666889a766666162222ccc222666666200000000000000000000000000000000000000000000000000000000
0000ccc066666666666889a75666666600000000666889a766111666222c7c228866868800000000000000000000000000000000000000000000000000000000
00000000000000000000000005555000000000006662222266666222222ccc222666666200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000006622222222222222222222222286682200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000006222222222222222222222222282282200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000002222222222222222222222222222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000002222222282222222222222222222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000002222222888222222222222822222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000002228222282222222222228882222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000002222222222222222222222822222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000002222222222222222222222222222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000002222222222222222222222222222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000002222222222222222222222222222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000002222222222222222228282222222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000002222222222222222228686222222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000002222222222222222266666882222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000002222222222222222266666622228222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000002222222222222222886686882222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000002222222222222222266666622222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000002222222222222222228668222222222200000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000002222222222222222228228222222222200000000000000000000000000000000000000000000000000000000
__sfx__
00010000340602f0602c0602904026040230401f0301b0301703014030110300f0300d0300a020070200302002010030100101006000040000100000000000000000000000000000000000000000000000000000
000100020601000010266002c600246002a6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010002140100d010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
